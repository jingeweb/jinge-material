!function(){const e={locale:"zh_cn",dictionary:{"4A'q*":"构建在 Jinge 框架上的 Material Design 组件库","K)oW/":"作者","m3' A":"项目介绍","4TQ/q":"关于"},render:function(e,t,n,r,a,l,i,o,s,u){return{components:{"lxB}9":function(e,t,r){return[(()=>{const r=l("p",Object.assign({[t||""]:t?"":null},e[n].compStyle),"在长期的业务项目研发中，我探索并开发了一个和主流 mvvm 框架的核心都不同的 ",l("a",{target:"_blank",href:"https://github.com/YuhangGe/jinge",[t||""]:t?"":null},"Jinge")," 框架。为了验证这个框架的能力，我决定在这个框架上开发一个 UI 组件库。");return e[n].rootNodes.push(r),r})(),(()=>{const r=l("p",Object.assign({[t||""]:t?"":null},e[n].compStyle),"考虑到主要是为了快速验证 Jinge 框架的能力，并在组件库开发的过程中同步地不断完善这个框架，而不想在组件本身的开发上耗费过多精力，我决定直接从 ",l("a",{target:"_blank",href:"https://vuematerial.io",[t||""]:t?"":null},"Vue Material")," 这个项目分叉（Fork）。");return e[n].rootNodes.push(r),r})(),(()=>{const r=l("p",Object.assign({[t||""]:t?"":null},e[n].compStyle),"但由于 Jinge 框架和 Vue 框架除了在功能和使用方式上都保持了现代 mvvm 框架的一致性外，核心几乎完全不同，因此从 Vue Material 项目分叉后，会需要把整个项目除了 scss 样式之外的代码几乎全部重写。因此我并没有采用在 Github 平台上直接分叉（Fork）该项目的方式，而是另起炉灶新开了 Jinge Material 仓库。所以更准确的说法是，Jinge Materail 项目移植（Port）自 Vue Material 项目。");return e[n].rootNodes.push(r),r})(),(()=>{const r=l("p",Object.assign({[t||""]:t?"":null},e[n].compStyle),"Jinge Material 在移植自 Vue Material 项目的过程中，同时也参考 ",l("a",{href:"https://ant.design",target:"_blank",[t||""]:t?"":null},"Ant Design")," 和 ",l("a",{href:"https://element.eleme.cn/",target:"_blank",[t||""]:t?"":null},"Element")," 等现代组件库，对项目的目录结构和各别组件的设计进行了重构。");return e[n].rootNodes.push(r),r})()]}},attributes:{}}}};"undefined"!=typeof jinge?jinge.i18n.__regLoc(e):window.JINGE_I18N_DATA=e}();