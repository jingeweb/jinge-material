!function(){const o={locale:"zh_cn",dictionary:{"cN2y#":"名称","irK?+":"描述",o1PP5:"默认值","b7z[W":"参数","gFAi|":"确认","n#z;W":"控制对话框的打开和关闭","ZfYW-":"是否启用叠加的灰色蒙层","V|k~]":"默认情况下，按 esc 时对话框将关闭。设置为 false 可取消此行为。","bHJ`q":"默认情况下，单击外部时该对话框将关闭。设置为 false 可取消此行为。","vn'O<":"控制该对话框将在移动屏幕上是否会变为全屏。","x}(Kg":"对话框打开时触发","d ;bt":"对话框关闭时触发","Gs{vh":"在叠加层外点击时触发","Na;97":"通知对话框的标题","yY4`/":"通知对话框的内容。支持 html。","I[<c@":"确认按钮的文案","S9 _S":"确认对话框的标题","GL~dA":"确认对话框的内容。支持 html。","tn'*p":"取消按钮的文案","GJ@ 6":"取消","V*EJ)":"确认按钮是否处于加载状态。当该参数为 true 时，确认按钮会展示 md-spinner，并处于 disabled 状态。","S CM<":"点击确认按钮时触发","0aIX}":"点击取消按钮时触发","K2(~":"输入框的默认值","JmJ Q":"输入框是否必须填写","bbOv-":"可选参数，指定输入框的最大允许字符数","rA,F=":"输入框的占位提示信息","y}Pbz":"对话框的标题",HxX$A:"对话框用于通知用户有关特定任务的信息，并且可能包含关键信息，需要做出决定或涉及多个任务。您可以在其中包含选项卡，所有表单组件等等。","q1tW!":"对话框包含了一组模拟浏览器原生对话框的预设对话框，例如通知（alert）、确认（confirm）和提示输入（prompt）。","nBl?[":"对话框","Y|U>n":"对话框组件内部可以包含任何 HTML 内容，用于创建丰富的对话框内容。",Wapaw:"提示对话框","7o<oM":"确认对话框",B2vhb:"在实际业务使用时，有一种常见情况是，在 confirm 回调中要调用服务器的 api 接口更新，api 请求成功后，才关闭对话框（如果失败，则允许用户重试），api 请求过程中 Confirm 按钮不能点击且有 spinner 状态。","p;RNo":"针对这种情况，confirmCallback 允许返回 `false` 来阻止对话框关闭，还允许直接返回一个 Promise 对象。对话框会等待该 Promise，直到其 resolve 返回的数据不是 `false` 才关闭对话框。","m]M6?":"输入对话框","SI?AN":"确认要使用谷歌的定位服务？","Xi(2y":"使用谷歌定位服务意味着，应用在被使用或处于后台时，都会向谷歌发送<strong>匿名</strong>位置数据。","N&p#]":"同意","MIr*B":"拒绝","Z'/uk":"您的文章已被删除。","FO%O%":"漂亮！","GVxi=":"提交成功！",bCayS:"您的文章 <strong>你好世界</strong> 已经创建成功！","Kw#Qq":"请输入您的名字：",rUAQw:"名字","GG<<Q":"名字必须以字符 a 打头！","xTjS[":"你好，${name}"},render:function(o,t,n,e,s,r,c,l,u,i){return{components:{"s`A3H":function(t,e,s){return[o(t,"可以通过在 html 模板里使用 "),(()=>{const o=r("code",Object.assign({[e||""]:e?"":null},t[n].compStyle),"md-dialog-alert");return t[n].rootNodes.push(o),o})(),o(t," 组件，也可以通过在 js 代码中直接调用 "),(()=>{const o=r("code",Object.assign({[e||""]:e?"":null},t[n].compStyle),"DialogAlert");return t[n].rootNodes.push(o),o})(),o(t," 组件的静态函数 "),(()=>{const o=r("code",Object.assign({[e||""]:e?"":null},t[n].compStyle),"show");return t[n].rootNodes.push(o),o})(),o(t," 来触发。")]},"Ds|M3":function(t,e,s){return[(()=>{const o=r("code",Object.assign({[e||""]:e?"":null},t[n].compStyle),"DialogAlert.show");return t[n].rootNodes.push(o),o})(),o(t," 函数第一个参数为必须的 Object 类型的 options，该 options 可指定的属性和 "),(()=>{const o=r("code",Object.assign({[e||""]:e?"":null},t[n].compStyle),"md-dialog-alert");return t[n].rootNodes.push(o),o})(),o(t," 组件的属性一致。")]},"mL`@0":function(t,e,s){return[o(t,"该函数接收的第二个参数是可选的关闭对话框后的回调函数。如果该回调函数返回了 "),(()=>{const o=r("code",Object.assign({[e||""]:e?"":null},t[n].compStyle),"false");return t[n].rootNodes.push(o),o})(),o(t," 则会阻止对话框的关闭。")]},"DcR=F":function(t,e,s){return[o(t,"展示确认对话框，可以通过在 html 模板里使用 "),(()=>{const o=r("code",Object.assign({[e||""]:e?"":null},t[n].compStyle),"md-dialog-confirm");return t[n].rootNodes.push(o),o})(),o(t," 组件，也可以通过在 js 代码中直接调用 "),(()=>{const o=r("code",Object.assign({[e||""]:e?"":null},t[n].compStyle),"DialogConfirm");return t[n].rootNodes.push(o),o})(),o(t," 组件的静态函数 "),(()=>{const o=r("code",Object.assign({[e||""]:e?"":null},t[n].compStyle),"show");return t[n].rootNodes.push(o),o})(),o(t," 来触发。")]},"s@tS=":function(t,e,s){return[(()=>{const o=r("code",Object.assign({[e||""]:e?"":null},t[n].compStyle),"DialogConfirm.show");return t[n].rootNodes.push(o),o})(),o(t," 函数第一个参数为必须的 Object 类型的 options，该 options 里的可指定的属性和 "),(()=>{const o=r("code",Object.assign({[e||""]:e?"":null},t[n].compStyle),"md-dialog-confirm");return t[n].rootNodes.push(o),o})(),o(t," 组件的属性一致。")]},oTydu:function(t,e,s){return[o(t,"该函数接收的可选的第二个参数和第三个参数依次是确认和取消的回调，如果回调函数返回了 "),(()=>{const o=r("code",Object.assign({[e||""]:e?"":null},t[n].compStyle),"false");return t[n].rootNodes.push(o),o})(),o(t," 则会阻止对话框的关闭。")]},"k$(Pn":function(t,e,s){return[o(t,"输入对话框和确认对话框类似，可以通过在 html 模板里使用 "),(()=>{const o=r("code",Object.assign({[e||""]:e?"":null},t[n].compStyle),"md-dialog-prompt");return t[n].rootNodes.push(o),o})(),o(t," 组件，也可以通过在 js 代码中直接调用 "),(()=>{const o=r("code",Object.assign({[e||""]:e?"":null},t[n].compStyle),"DialogPrompt");return t[n].rootNodes.push(o),o})(),o(t," 组件的静态函数 "),(()=>{const o=r("code",Object.assign({[e||""]:e?"":null},t[n].compStyle),"show");return t[n].rootNodes.push(o),o})(),o(t," 来触发。")]},"u)?qw":function(t,e,s){return[(()=>{const o=r("code",Object.assign({[e||""]:e?"":null},t[n].compStyle),"DialogPrompt.show");return t[n].rootNodes.push(o),o})(),o(t," 函数和 "),(()=>{const o=r("code",Object.assign({[e||""]:e?"":null},t[n].compStyle),"DialogConfirm.show");return t[n].rootNodes.push(o),o})(),o(t," 的参数一致，但有一个区别是：confirmCallback 如果返回字符串，会认为是对输入值的错误提示；如果返回 Promise，对于 reject 的数据或 resolve 的字符串 也会认为是错误提示。")]}},attributes:{}}}};"undefined"!=typeof jinge?jinge.i18n.__regLoc(o):window.JINGE_I18N_DATA=o}();