!function(){const e={locale:"en",dictionary:{"cN2y#":"Name","irK?+":"Description",o1PP5:"Default","b7z[W":"Parameters","rhBy}":"Controls whether Popover are displayed.","X0R?M":"The trigger method of the Popover, including <code>click</code>, <code>hover</code> and <code>none</code>. If it is specified as <code>none</code>, it means that the Popover will not automatically bound to the trigger element, and is completely controlled by the active property.",YqPrR:"The Popover displayed after a certain delay, in milliseconds.","D]'sR":"Placement of Popover. See docs of popper.js.","xfl7+":"Offset of Popover. See docs of popper.js.","4+Z]O":"HTML class add to Popover conent element.","j=5PH":"CSS animation when Popover are shown and hidden.","iN {l":"Whether to hide the Popover when outside body is clicked.","3D^vR":"More custom advanced configuration for Popper.js.","2j{RH":"Specify the title class.","p/]/3":"Specify the content class.",Ffrw3:"Specify the bottom actions class","0t.K|":"Triggered when Popover show or hide.","c2.**":"A simple popup menu to provide extra information or operations.The floating card popped by clicking or hovering.","7@E%7":"Popover","J(9Lg":"Simply trigger Popover show and hide:","OS6b<":"Show and hide the Popover through the attribute passed from the parent component:"},render:function(e,o,t,n,i,r,c,a,d,p){return{components:{"z{HZt":function(o,n,i){return[e(o,"Comparing with "),(()=>{const e=r("code",Object.assign({[n||""]:n?"":null},o[t].compStyle),"Tooltip");return o[t].rootNodes.push(e),e})(),e(o,", besides information Popover card can also provide action elements like links and buttons.")]}},attributes:{}}}};"undefined"!=typeof jinge?jinge.i18n.__regLoc(e):window.JINGE_I18N_DATA=e}();