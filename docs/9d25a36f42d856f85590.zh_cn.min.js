!function(){const o={locale:"zh_cn",dictionary:{"cN2y#":"名称","irK?+":"描述",bzK0a:"宽度","5$pra":"适用于最大 599px 宽的屏幕，比如大、中、小型人像手机以及纵向的小型平板电脑。","r|BXJ":"适用于宽度介于 600 像素到 959 像素之间的屏幕，比如中型和大型手机、纵向模式的小型和大型平板电脑以及某些台式机显示器。","4z*F;":"适用于 960 像素至 1279 像素之间的屏幕，比如横向和台式显示器中的小型和大型平板电脑。","y,BV4":"适用于 1280 像素至 1919 像素之间的屏幕，比如大型台式机显示器。","el#S2":"适用于宽于 1920 像素的屏幕，比如大型台式机显示器或并排屏幕。","vLK{E":"屏幕大小","C^SYi":"间隙",A6JKs:"布局项目之间使用自动计算的间隙。","E)LfN":"默认情况下，布局项目将始终包装在父布局下。 如果要禁用此行为，请使用此类，但是响应性将不起作用。","Jn)7.":"设置所有子项的对齐方式，仅当 [x] 和 [y] 同时存在时，对齐方式才有效，例如 <code>md-alignment-top-center</code>。 可能的值包括：","u_2#A":"设置元素的布局大小，按百分比计算，[amount] 可以是 33、66 或 5 的倍数，例如 <code>md-size-25</code>。","E#Jxh":"设置元素在特定断点下的布局大小，可能的值包括：","3~<q9":"设置元素在特定断点下隐藏，可能的值包括：","MrX^a":"Material Design 中的响应式布局可适应任何可能的屏幕尺寸，该布局方案包括一个灵活的网格系统，以确保各个布局之间的一致性。",wCQsw:"断点","jxg!5":"使用断点来控制响应式布局：","t#=]=":"列布局","D~wm7":"列布局系统通过 css 的 flexbox 实现，从而提供了灵活而便捷的 API。","Qs,B|":"默认情况下，布局项之间没有间隙。可以设置为基于屏幕宽度和断点自动计算元素之间的间距：","isW9!":"试试调整浏览器的大小并观察布局变化：","5aKcX":"布局列也可用于嵌套布局：","L^_EN":"不是所有元素都必须指定布局大小。对于没有指定大小的元素，会自动计算其大小：","IH~@T":"以下类可以被应用到任何 HTML 元素上：","f2*``":"布局"},render:function(o,t,n,e,c,s,r,u,i,l){return{components:{"z)p{9":function(t,e,c){return[o(t,"使用布局系统，需要先创建一个 "),(()=>{const o=s("code",Object.assign({[e||""]:e?"":null},t[n].compStyle),"md-layout");return t[n].rootNodes.push(o),o})(),o(t," 的父元素，然后在其下创建任意数量的 "),(()=>{const o=s("code",Object.assign({[e||""]:e?"":null},t[n].compStyle),"md-layout-item");return t[n].rootNodes.push(o),o})(),o(t," 列表：")]},"x)43H":function(t,e,c){return[o(t,"可以指定 "),(()=>{const o=s("code",Object.assign({[e||""]:e?"":null},t[n].compStyle),"md-layout");return t[n].rootNodes.push(o),o})(),o(t," 使用不同的对齐方式，并可以对 "),(()=>{const o=s("code",Object.assign({[e||""]:e?"":null},t[n].compStyle),"md-alignment-[horizontal]-[vertical]");return t[n].rootNodes.push(o),o})(),o(t," 类进行水平和垂直对齐的各种组合，例如，"),(()=>{const o=s("code",Object.assign({[e||""]:e?"":null},t[n].compStyle),"md-alignment-top-center");return t[n].rootNodes.push(o),o})(),o(t,"。对齐在父元素上起作用，它将更改所有子项的位置：")]},"LS}4b":function(t,e,c){return[o(t,"使用 "),(()=>{const o=s("code",Object.assign({[e||""]:e?"":null},t[n].compStyle),"md-size-[amount]");return t[n].rootNodes.push(o),o})(),o(t," 可以指定元素在布局中的大小，例如 "),(()=>{const o=s("code",Object.assign({[e||""]:e?"":null},t[n].compStyle),"md-size-30");return t[n].rootNodes.push(o),o})(),o(t,"。其中，[amount] 的值可以是 33、66 或 5 的倍数。")]},"tn},}":function(t,e,c){return[o(t,"使用 "),(()=>{const o=s("code",Object.assign({[e||""]:e?"":null},t[n].compStyle),"md-[breakpoint]-size-[amount]");return t[n].rootNodes.push(o),o})(),o(t," 可以基于断点来更改布局大小。尝试调整浏览器的大小：")]},"27@@5":function(t,e,c){return[o(t,"可以使用 "),(()=>{const o=s("code",Object.assign({[e||""]:e?"":null},t[n].compStyle),"md-[breakpoint]-hide");return t[n].rootNodes.push(o),o})(),o(t," 类来实现在较小屏幕上隐藏某个元素：")]},"Kv^b!":function(t,e,c){return[o(t,"以下类可以应用于任何"),(()=>{const o=s("code",Object.assign({[e||""]:e?"":null},t[n].compStyle),"md-layout");return t[n].rootNodes.push(o),o})(),o(t,"的直接子元素：")]}},attributes:{}}}};"undefined"!=typeof jinge?jinge.i18n.__regLoc(o):window.JINGE_I18N_DATA=o}();