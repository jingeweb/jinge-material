@use 'sass:math';
@use 'sass:map';
@use 'sass:list';
@import './variables.scss';

/**
 * Breakpoint
 */

@mixin md-layout($breakpoint) {
  @if not map.has-key($md-breakpoints, $breakpoint) {
    @error 'unsupport breakpoint:' + $breakpoint;
  }
  @if $breakpoint == 'xsmall' {
    @media (min-width: 0) and (max-width: #{map.get($md-breakpoints, $breakpoint)}px) {
      @content;
    }
  } @else if $breakpoint == 'xlarge' {
    @media (min-width: #{map.get($md-breakpoints, $breakpoint)}px) {
      @content;
    }
  } @else {
    $range: map.get($md-breakpoints, $breakpoint);

    // @media (min-width: #{list.nth($range, 1)}px) and (max-width: #{list.nth($range, 2)}px) {
    //   @content;
    // }
    @media (max-width: #{list.nth($range, 2)}px) {
      @content;
    }
  }
}

@mixin md-layout-gutter($breakpoint) {
  @if not map.has-key($md-breakpoints, $breakpoint) {
    @error 'unsupport breakpoint:' + $breakpoint;
  }

  $spacing: math.div(map.get($md-gutters, $breakpoint), 2);

  --md-layout-gutter: #{$spacing}px;

  // &.md-gutter {
  //   margin-right: -$spacing;
  //   margin-left: -$spacing;

  //   > .md-layout-item {
  //     padding-right: $spacing;
  //     padding-left: $spacing;
  //   }
  // }
}

/**
 * Layout Item
 */

@mixin md-layout-item($breakpoint: '') {
  @if $breakpoint != '' {
    @if not map.has-key($md-breakpoints, $breakpoint) {
      @error 'unsupport breakpoint:' + $breakpoint;
    }

    $breakpoint: '-#{$breakpoint}';
  }

  // &.md#{$breakpoint}-size {
  //   flex: 1 1;
  // }

  @for $i from 1 through 19 {
    $counter: $i * 5;

    &.md-size#{$breakpoint}-#{$counter} {
      --md-layout-item-width: #{$counter + '%'};

      // min-width: #{$counter + '%'};
      // max-width: #{$counter + '%'};
      // flex: 0 1 #{$counter + '%'};
    }
  }

  &.md-size#{$breakpoint}-33 {
    /* stylelint-disable-next-line number-max-precision */
    --md-layout-item-width: 33.3333333333%;

    // min-width: 33.3333%;
    // max-width: 33.3333%;
    // flex: 0 1 33.3333%;
  }

  &.md-size#{$breakpoint}-66 {
    /* stylelint-disable-next-line number-max-precision */
    --md-layout-item-width: 66.6666666666%;

    // min-width: 66.6666%;
    // max-width: 66.6666%;
    // flex: 0 1 66.6666%;
  }

  &.md-size#{$breakpoint}-100 {
    --md-layout-item-width: 100%;

    // min-width: 100%;
    // max-width: 100%;
    // flex: 1 1 100%;
    margin-left: 0 !important;
  }
}
